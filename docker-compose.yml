version: '3.8'

services:
  # 表情识别平台主服务
  fer-platform:
    build: .
    container_name: fer-platform
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./models:/app/models
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - fer-network

  # Redis缓存服务
  redis:
    image: redis:7-alpine
    container_name: fer-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - fer-network

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: fer-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - fer-platform
    restart: unless-stopped
    networks:
      - fer-network

  # 监控服务 (可选)
  prometheus:
    image: prom/prometheus:latest
    container_name: fer-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - fer-network

  # Grafana仪表板 (可选)
  grafana:
    image: grafana/grafana:latest
    container_name: fer-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    networks:
      - fer-network

volumes:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  fer-network:
    driver: bridge 